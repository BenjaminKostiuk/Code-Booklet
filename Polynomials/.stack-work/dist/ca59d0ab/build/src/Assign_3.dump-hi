
==================== FINAL INTERFACE ====================
2018-10-23 01:09:40.7881995 UTC

interface 1JC3-Assign3-0.1.0.0-EuZjAisOsWwAS3BuVKIX1H:Assign_3 8002
  interface hash: 9f82240297e79046cf0fc038fdb8cc60
  ABI hash: 0c147fbe669d054d96a6915ea9b50ad5
  export-list hash: 8bfaf9740ac9e6de1d0be4482ce48ede
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0191c04348c6dfa857340b6e1b4116aa
  sig of: Nothing
  used TH splices: False
  where
exports:
  Assign_3.macid
  Assign_3.poly1
  Assign_3.poly2
  Assign_3.poly3
  Assign_3.polyDegree
  Assign_3.polyDeriv
  Assign_3.polyValue
  Assign_3.Poly{Assign_3.Coef Assign_3.Prod Assign_3.Sum Assign_3.X}
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 5e60b761569ee353529e98a36b72df11
1cd946f86d8e91c6ef82ff655dfd2e5f
  $fShowPoly :: GHC.Show.Show a => GHC.Show.Show (Assign_3.Poly a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dShow :: GHC.Show.Show a).
                  @ (Assign_3.Poly a)
                  (Assign_3.$fShowPoly_$cshowsPrec @ a $dShow)
                  (Assign_3.$fShowPoly_$cshow @ a $dShow)
                  (Assign_3.$fShowPoly_$cshowList @ a $dShow) -}
ff5fc286d9766defb21fad990f24fdd2
  $fShowPoly1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
1cd946f86d8e91c6ef82ff655dfd2e5f
  $fShowPoly_$cshow ::
    GHC.Show.Show a => Assign_3.Poly a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(C(C1(U)),A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dShow :: GHC.Show.Show a) (x :: Assign_3.Poly a) ->
                 Assign_3.$fShowPoly_$cshowsPrec
                   @ a
                   $dShow
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1cd946f86d8e91c6ef82ff655dfd2e5f
  $fShowPoly_$cshowList ::
    GHC.Show.Show a => [Assign_3.Poly a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (eta :: [Assign_3.Poly a])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Assign_3.Poly a)
                   (Assign_3.$fShowPoly_$cshowsPrec @ a $dShow Assign_3.$fShowPoly1)
                   eta
                   eta1) -}
1cd946f86d8e91c6ef82ff655dfd2e5f
  $fShowPoly_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Assign_3.Poly a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A,A)><L,1*U(U)><S,1*U> -}
d85666c86a89ebcb248e7f00c651a291
  $tc'Coef :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10785096687721845975##
                   15545325018426843821##
                   Assign_3.$trModule
                   Assign_3.$tc'Coef1) -}
153d444738017b34bd16d373dd871f3c
  $tc'Coef1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Coef"#) -}
ad183d832bee08ebd3464496c9eea80f
  $tc'Prod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2481615217931782648##
                   7746683198959078811##
                   Assign_3.$trModule
                   Assign_3.$tc'Prod1) -}
4f0ea38d9889b0ad763c5faab7846380
  $tc'Prod1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Prod"#) -}
0137789eea482924a4fe379f681af688
  $tc'Sum :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6356586582158661608##
                   12908801313950985925##
                   Assign_3.$trModule
                   Assign_3.$tc'Sum1) -}
c409d7f5c27544d6ba5921c9642ea776
  $tc'Sum1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Sum"#) -}
1cd2f99fa7b72ea539d6d906549997bc
  $tc'X :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8433270902197284941##
                   13499062586190582653##
                   Assign_3.$trModule
                   Assign_3.$tc'X1) -}
6a86ec0e485a1bb9444959601accbf5e
  $tc'X1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'X"#) -}
3c502251e4541d16856393a2b72e454e
  $tcPoly :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12333439033014756208##
                   4070560432742229546##
                   Assign_3.$trModule
                   Assign_3.$tcPoly1) -}
21a556ec5175dea5537b7b3f782af40a
  $tcPoly1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Poly"#) -}
edb3cb6090b403b9b5dd1bfee4006cde
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Assign_3.$trModule2
                   Assign_3.$trModule1) -}
936883e375e9a3535951f79f081fcff9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Assign_3"#) -}
94c65fd9e7763bd803c5ece69d115969
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "1JC3-Assign3-0.1.0.0-EuZjAisOsWwAS3BuVKIX1H"#) -}
a14b6d50cd4e80d9e8b802abf5a98b31
  $wpolyDegree :: Assign_3.Poly a -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
1cd946f86d8e91c6ef82ff655dfd2e5f
  data Poly a
    = X
    | Coef a
    | Sum (Assign_3.Poly a) (Assign_3.Poly a)
    | Prod (Assign_3.Poly a) (Assign_3.Poly a)
87d48e02b522ff3b92395f489512c444
  macid :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "kostiukb"#) -}
e871902b9f6a265172b23e36df637435
  poly1 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Assign_3.Sum
                   @ GHC.Integer.Type.Integer
                   Assign_3.poly4
                   (Assign_3.X @ GHC.Integer.Type.Integer)) -}
b0326241f206c7b2ea8e539a65bac508
  poly10 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Assign_3.Sum
                   @ GHC.Integer.Type.Integer
                   (Assign_3.X @ GHC.Integer.Type.Integer)
                   Assign_3.poly11) -}
fe6ca164057b835680236112699f421d
  poly11 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Assign_3.Coef
                   @ GHC.Integer.Type.Integer
                   Assign_3.poly12) -}
7478c0b1e3731efcb8f360ae4a04e45d
  poly12 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
c3188397d300b518e13c804b23a89d6b
  poly13 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Assign_3.Prod
                   @ GHC.Integer.Type.Integer
                   (Assign_3.X @ GHC.Integer.Type.Integer)
                   (Assign_3.X @ GHC.Integer.Type.Integer)) -}
bb357584acd7867c20d520a9b878324d
  poly2 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Assign_3.Prod
                   @ GHC.Integer.Type.Integer
                   Assign_3.poly10
                   Assign_3.poly7) -}
24dbb4eb44021797b0c909017034a6b7
  poly3 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Assign_3.Sum
                   @ GHC.Integer.Type.Integer
                   Assign_3.poly13
                   Assign_3.poly4) -}
2c8aedf2b7d7e45e375bed263bf1992a
  poly4 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Assign_3.Prod
                   @ GHC.Integer.Type.Integer
                   Assign_3.poly5
                   (Assign_3.X @ GHC.Integer.Type.Integer)) -}
db3eefa20fb557fa0f26d69202d6549d
  poly5 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Assign_3.Coef
                   @ GHC.Integer.Type.Integer
                   Assign_3.poly6) -}
df8f33e8f857d037189750530bd210f7
  poly6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
80e3cc64197709f6e673c53c8ae55e1e
  poly7 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Assign_3.Sum
                   @ GHC.Integer.Type.Integer
                   (Assign_3.X @ GHC.Integer.Type.Integer)
                   Assign_3.poly8) -}
94c9e5ec5ea0cbd003c0ad97b627eb3a
  poly8 :: Assign_3.Poly GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Assign_3.Coef
                   @ GHC.Integer.Type.Integer
                   Assign_3.poly9) -}
dc4d012202a6abd5b52ba374869f6aed
  poly9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
fc826d7b0fe62682bc1b19b34b1aa82b
  polyDegree ::
    (GHC.Num.Num a, GHC.Classes.Eq a) =>
    Assign_3.Poly a -> GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.Classes.Eq a)
                   (w2 :: Assign_3.Poly a) ->
                 Assign_3.$wpolyDegree @ a w2) -}
54f59df2beceebb1944ed1e5a70c7d7d
  polyDeriv :: GHC.Num.Num a => Assign_3.Poly a -> Assign_3.Poly a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,C(U))><S,1*U> -}
955ecb9ba54f74bd2588b512db730a6b
  polyValue :: GHC.Num.Num a => Assign_3.Poly a -> a -> a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,C(C1(U)),A,A,A,A)><S,1*U><L,U> -}
instance [safe] GHC.Show.Show [Assign_3.Poly] = Assign_3.$fShowPoly
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

